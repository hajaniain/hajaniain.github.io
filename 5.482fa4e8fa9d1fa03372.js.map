{"version":3,"sources":["./node_modules/@firebase/functions/dist/index.esm.js"],"names":["errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","_super","HttpsErrorImpl","code","message","details","_this","call","this","Object","setPrototypeOf","prototype","Error","ContextProvider","authProvider","messagingProvider","auth","messaging","getImmediate","optional","get","then","getAuthToken","token","_a","label","undefined","trys","push","getToken","sent","accessToken","getInstanceIdToken","self","Notification","permission","e","getContext","authToken","instanceIdToken","mapValues","o","f","result","key","hasOwnProperty","instance","fetchImpl","namespaceExports","Serializer","encode","data","Number","valueOf","isFinite","toString","Array","isArray","map","x","decode","json","value","isNaN","Service","app_","regionOrCustomDomain_","serializer","emulatorOrigin","delete","Promise","resolve","deleteService","contextProvider","cancelAllRequests","url","URL","customDomain","origin","region","defineProperty","enumerable","configurable","_url","name","projectId","options","useEmulator","host","port","useFunctionsEmulator","httpsCallable","postJSON","body","headers","response","method","JSON","stringify","status","context","timer","failAfterPromise","error","responseData","_b","millis","promise","_","reject","setTimeout","failAfter","timeout","race","clearTimeoutWrapper","bodyJSON","codeForHTTPStatus","description","errorJSON","status_1","_errorForResponse","clearTimeout","fetch","bind","Functions","registerComponent","container","regionOrCustomDomain","app","getProvider","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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","file":"5.482fa4e8fa9d1fa03372.js","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    __extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(authProvider, messagingProvider) {\r\n        var _this = this;\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(function (auth) { return (_this.auth = auth); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(function (messaging) { return (_this.messaging = messaging); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.auth) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.auth.getToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.messaging ||\r\n                    !('Notification' in self) ||\r\n                    Notification.permission !== 'granted') {\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                try {\r\n                    return [2 /*return*/, this.messaging.getToken()];\r\n                }\r\n                catch (e) {\r\n                    // We don't warn on this, because it usually means messaging isn't set up.\r\n                    // console.warn('Failed to retrieve instance id token.', e);\r\n                    // If there's any error when trying to get the token, leave it off.\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    var timer;\r\n    var promise = new Promise(function (_, reject) {\r\n        timer = setTimeout(function () {\r\n            reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n    return {\r\n        timer: timer,\r\n        promise: promise\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param regionOrCustomDomain_ one of:\r\n     *   a) A region to call functions from, such as us-central1\r\n     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n     */\r\n    function Service(app_, authProvider, messagingProvider, regionOrCustomDomain_, fetchImpl) {\r\n        var _this = this;\r\n        if (regionOrCustomDomain_ === void 0) { regionOrCustomDomain_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.fetchImpl = fetchImpl;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return Promise.resolve(_this.deleteService());\r\n            }\r\n        };\r\n        this.contextProvider = new ContextProvider(authProvider, messagingProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            var url = new URL(regionOrCustomDomain_);\r\n            this.customDomain = url.origin;\r\n            this.region = 'us-central1';\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain_;\r\n        }\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return this.customDomain + \"/\" + name;\r\n        }\r\n        return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Modify this instance to communicate with the Cloud Functions emulator.\r\n     *\r\n     * Note: this must be called before this instance has been used to do any operations.\r\n     *\r\n     * @param host The emulator host (ex: localhost)\r\n     * @param port The emulator port (ex: 5001)\r\n     */\r\n    Service.prototype.useEmulator = function (host, port) {\r\n        this.emulatorOrigin = \"http://\" + host + \":\" + port;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @deprecated Prefer the useEmulator(host, port) method.\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, json, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers['Content-Type'] = 'application/json';\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.fetchImpl(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 4:\r\n                        json = null;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 6:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = {};\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _b.sent();\r\n                        if (context.authToken) {\r\n                            headers['Authorization'] = 'Bearer ' + context.authToken;\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\r\n                                failAfterPromise,\r\n                                clearTimeoutWrapper(timer, this.cancelAllRequests)\r\n                            ])];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\r\nfunction clearTimeoutWrapper(timer, promise) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, promise];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    clearTimeout(timer);\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction registerFunctions(instance, fetchImpl) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    function factory(container, regionOrCustomDomain) {\r\n        // Dependencies\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var messagingProvider = container.getProvider('messaging');\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new Service(app, authProvider, messagingProvider, regionOrCustomDomain, fetchImpl);\r\n    }\r\n    instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.6.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterFunctions(firebase, fetch.bind(self));\r\nfirebase.registerVersion(name, version);\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":"webpack:///"}