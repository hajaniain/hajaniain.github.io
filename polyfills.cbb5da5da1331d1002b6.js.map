{"version":3,"sources":["./node_modules/zone.js/dist/task-tracking.js","./node_modules/zone.js/fesm2015/zone.js","./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["TaskTrackingZoneSpec","this","name","microTasks","macroTasks","eventTasks","properties","get","Zone","current","prototype","getTasksFor","type","Error","onScheduleTask","parentZoneDelegate","currentZone","targetZone","task","source","push","scheduleTask","onCancelTask","tasks","i","length","splice","cancelTask","onInvokeTask","applyThis","applyArgs","invokeTask","clearEvents","ObjectGetOwnPropertyDescriptor","global","performance","mark","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","parent","zoneSpec","_parent","_name","_properties","_zoneDelegate","ZoneDelegate","key","zone","getZoneWith","hasOwnProperty","fork","callback","_callback","intercept","runGuarded","arguments","_currentZoneFrame","invoke","error","handleError","NO_ZONE","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","_currentTask","data","isPeriodic","cancelFn","undefined","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","customSchedule","ZoneTask","microTask","customCancel","canceling","count","patches","fn","ignoreDuplicate","perfName","_api","nativeMicroTaskQueuePromise","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","apply","returnTask","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","toState","fromState1","fromState2","handleId","toString","Object","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","result","listener","errorEvent","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handler","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handleUnhandledRejection","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","wasCalled","onceWrapper","wrappedFunction","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","executor","Symbol","toStringTag","species","C","onFinally","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","resultPromise","ctor","Promise","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","nativePrependEventListener","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventName","symbolEventNames","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","onPropertySymbol","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","isIE","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","clear","blockingMethods","s","patchEvent","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","sendNative","url","aborted","placeholderCallback","XHR_ERROR_BEFORE_SCHEDULED","abortNative","XHR_TASK","XHR_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","patchXHR","geolocation","fnNames","patchPrototype","findPromiseRejectionHandler","PromiseRejectionEvent","evt","module","exports","arr","len","arr2","__esModule","Constructor","_defineProperties","props","protoProps","staticProps","unsupportedIterableToArray","o","allowArrayLike","it","iterator","isArray","F","n","done","_e","f","normalCompletion","didErr","step","_e2","arrayLikeToArray","minLen","from","test"],"mappings":"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QrG,EAAM2c,EAAMxT,IAEnDoI,EAAIxF,sBAAsB1F,EAAOmW,GAASE,IAU9C,IAwGMI,GAAmB,CACrB,4BACA,aACA,aACA,eACA,sBACA,cACA,eACA,cACA,eACA,oBACA,4BACA,kBACA,aACA,iBACA,UACA,iBACA,UACA,SACA,QACA,WACA,WACA,WACA,mBACA,UACA,qBACA,SACA,gBACA,qBACA,wBACA,0BAOEC,GAAyB,CAAC,YAAa,gBAAiB,YAAa,oBAAqB,mBA6D1FC,GAAkB,CAAC,QACnBC,GAAqB,CAAC,OAAQ,QAAS,QAAS,OAAQ,SAAU,SAAU,gBAC5EC,GAAoB,CAAC,SAAU,SAAU,SACzCC,GAA2B,CAC7B,YAAa,WAAY,QAAS,QAAS,OAAQ,WAAY,UAAW,UAC1E,oBAEEC,GAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,GAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,GAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE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","file":"polyfills.cbb5da5da1331d1002b6.js","sourcesContent":["'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n        factory();\n}((function () {\n    'use strict';\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A `TaskTrackingZoneSpec` allows one to track all outstanding Tasks.\n     *\n     * This is useful in tests. For example to see which tasks are preventing a test from completing\n     * or an automated way of releasing all of the event listeners at the end of the test.\n     */\n    var TaskTrackingZoneSpec = /** @class */ (function () {\n        function TaskTrackingZoneSpec() {\n            this.name = 'TaskTrackingZone';\n            this.microTasks = [];\n            this.macroTasks = [];\n            this.eventTasks = [];\n            this.properties = { 'TaskTrackingZone': this };\n        }\n        TaskTrackingZoneSpec.get = function () {\n            return Zone.current.get('TaskTrackingZone');\n        };\n        TaskTrackingZoneSpec.prototype.getTasksFor = function (type) {\n            switch (type) {\n                case 'microTask':\n                    return this.microTasks;\n                case 'macroTask':\n                    return this.macroTasks;\n                case 'eventTask':\n                    return this.eventTasks;\n            }\n            throw new Error('Unknown task format: ' + type);\n        };\n        TaskTrackingZoneSpec.prototype.onScheduleTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n            task['creationLocation'] = new Error(\"Task '\" + task.type + \"' from '\" + task.source + \"'.\");\n            var tasks = this.getTasksFor(task.type);\n            tasks.push(task);\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        };\n        TaskTrackingZoneSpec.prototype.onCancelTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n            var tasks = this.getTasksFor(task.type);\n            for (var i = 0; i < tasks.length; i++) {\n                if (tasks[i] == task) {\n                    tasks.splice(i, 1);\n                    break;\n                }\n            }\n            return parentZoneDelegate.cancelTask(targetZone, task);\n        };\n        TaskTrackingZoneSpec.prototype.onInvokeTask = function (parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n            if (task.type === 'eventTask')\n                return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n            var tasks = this.getTasksFor(task.type);\n            for (var i = 0; i < tasks.length; i++) {\n                if (tasks[i] == task) {\n                    tasks.splice(i, 1);\n                    break;\n                }\n            }\n            return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n        };\n        TaskTrackingZoneSpec.prototype.clearEvents = function () {\n            while (this.eventTasks.length) {\n                Zone.current.cancelTask(this.eventTasks[0]);\n            }\n        };\n        return TaskTrackingZoneSpec;\n    }());\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['TaskTrackingZoneSpec'] = TaskTrackingZoneSpec;\n})));\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;"],"sourceRoot":"webpack:///"}